/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import Controller.ControllerPet;
import java.util.LinkedList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import paquete2.*;

/**
 *
 * @author fmunoz
 */
public class FrmPet extends javax.swing.JFrame {

    LinkedList<Pet> ObjectList = new LinkedList<>();
    // LinkedList<Pet> catObjectList = new LinkedList<>();
    ControllerPet controllerPet;

    /**
     * Creates new form FrmPet
     */
    public FrmPet() {
        initComponents();
        this.controllerPet = new ControllerPet();
        this.ObjectList = controllerPet.listPet("Perro");
        this.ObjectList = controllerPet.listPet("Gato");
        this.fillJListDog();
        this.fillJListCat();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void fillJListDog() {
        DefaultListModel model = new DefaultListModel();
        int i = 0;
        for (Pet pet : ObjectList) {
            String data = pet.getName() + " - " + pet.getCode() + " - Perro";
            model.add(i, data);
            i++;
        }
        petList.setModel(model);
    }

    private void fillJListCat() {
        DefaultListModel model = new DefaultListModel();

        int i = 0;
        for (Pet pet : ObjectList) {
            String data = pet.getName() + " - " + pet.getCode() + " - Gato ";
            model.add(i, data);
            i++;
        }
        petList.setModel(model);
    }

    public void clearDogFields() {
        txtCatId.setText("");
        txtPetId.setText("");
        txtCodeDog.setText("");
        txtNameDog.setText("");
        txtColorDog.setText("");
        txtBornYearDog.setText("");
        selectBreedDog.setSelectedItem(0);
        selectHealthStatusDog.setSelectedItem(0);
        checkBoxPedigree.setSelected(false);
    }

    public void clearCatFields() {
        txtDogId.setText("");
        txtPetId.setText("");
        txtNameCat.setText("");
        txtCodeCat.setText("");
        txtColorCat.setText("");
        txtBornYearCat.setText("");
        selectBreedCat.setSelectedItem(0);
        selectHealthStatusCat.setSelectedItem(0);
    }

    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        petList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodeCat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNameCat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtBornYearCat = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtColorCat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        selectHealthStatusCat = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        selectBreedCat = new javax.swing.JComboBox<>();
        btnCrearCat = new javax.swing.JButton();
        btnBuscarCat = new javax.swing.JButton();
        btnEditarCat = new javax.swing.JButton();
        btnEliminarCat = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtCatId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPetId = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtCodeDog = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNameDog = new javax.swing.JTextField();
        txtColorDog = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtBornYearDog = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        selectHealthStatusDog = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        selectBreedDog = new javax.swing.JComboBox<>();
        btnEliminarDog = new javax.swing.JButton();
        btnEditarDog = new javax.swing.JButton();
        btnBuscarDog = new javax.swing.JButton();
        btnCrearDog = new javax.swing.JButton();
        checkBoxPedigree = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        txtPedId = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDogId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 102, 255));
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(255, 102, 255));

        jPanel1.setBackground(new java.awt.Color(255, 102, 255));

        petList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Pet 1", "Pet 2", "Pet 3", "Pet 4", "Pet 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(petList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("List Pets", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 102, 255));

        jLabel2.setText("Code");

        jLabel3.setText("Name");

        jLabel4.setText("Born Year");

        jLabel5.setText("Color");

        jLabel6.setText("Health Status");

        selectHealthStatusCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Saludable", "Enfermo" }));

        jLabel7.setText("Breed");

        selectBreedCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Andora", "Criollo", "Manchado", "Redbull" }));
        selectBreedCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBreedCatActionPerformed(evt);
            }
        });

        btnCrearCat.setBackground(new java.awt.Color(51, 255, 51));
        btnCrearCat.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnCrearCat.setText("Crear");
        btnCrearCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCatActionPerformed(evt);
            }
        });

        btnBuscarCat.setBackground(new java.awt.Color(102, 255, 255));
        btnBuscarCat.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnBuscarCat.setText("Buscar");
        btnBuscarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCatActionPerformed(evt);
            }
        });

        btnEditarCat.setBackground(new java.awt.Color(255, 204, 51));
        btnEditarCat.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnEditarCat.setText("Editar");
        btnEditarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCatActionPerformed(evt);
            }
        });

        btnEliminarCat.setBackground(new java.awt.Color(255, 51, 51));
        btnEliminarCat.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnEliminarCat.setText("Eliminar");
        btnEliminarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCatActionPerformed(evt);
            }
        });

        jLabel16.setText("petId");

        jLabel17.setText("catId");

        txtCatId.setEditable(false);

        txtPetId.setEditable(false);
        txtPetId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPetIdActionPerformed(evt);
            }
        });
        jScrollPane2.setViewportView(txtPetId);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnCrearCat)
                .addGap(66, 66, 66)
                .addComponent(btnBuscarCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(btnEditarCat)
                .addGap(34, 34, 34)
                .addComponent(btnEliminarCat)
                .addGap(37, 37, 37))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBornYearCat)
                            .addComponent(selectHealthStatusCat, 0, 180, Short.MAX_VALUE)
                            .addComponent(txtCodeCat))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtColorCat, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                    .addComponent(txtNameCat)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(selectBreedCat, 0, 190, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCatId, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodeCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNameCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBornYearCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtColorCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(selectHealthStatusCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(selectBreedCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel17)
                        .addComponent(txtCatId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarCat)
                    .addComponent(btnCrearCat)
                    .addComponent(btnEditarCat)
                    .addComponent(btnEliminarCat))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cats Manager", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 102, 255));

        jLabel8.setText("Code");

        jLabel9.setText("Name");

        jLabel10.setText("Color");

        jLabel11.setText("Born Year");

        jLabel12.setText("Health Status");

        selectHealthStatusDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Saludable", "Enfermo" }));

        jLabel13.setText("Breed");

        selectBreedDog.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pincher", "Bull Dog", "Pitbull", "Labrador" }));

        btnEliminarDog.setBackground(new java.awt.Color(255, 51, 51));
        btnEliminarDog.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnEliminarDog.setText("Eliminar");
        btnEliminarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDogActionPerformed(evt);
            }
        });

        btnEditarDog.setBackground(new java.awt.Color(255, 204, 51));
        btnEditarDog.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnEditarDog.setText("Editar");
        btnEditarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarDogActionPerformed(evt);
            }
        });

        btnBuscarDog.setBackground(new java.awt.Color(102, 255, 255));
        btnBuscarDog.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnBuscarDog.setText("Buscar");
        btnBuscarDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDogActionPerformed(evt);
            }
        });

        btnCrearDog.setBackground(new java.awt.Color(51, 255, 51));
        btnCrearDog.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnCrearDog.setText("Crear");
        btnCrearDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearDogActionPerformed(evt);
            }
        });

        checkBoxPedigree.setText("pedigree");
        checkBoxPedigree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPedigreeActionPerformed(evt);
            }
        });

        jLabel14.setText("petId");

        txtPedId.setEditable(false);
        txtPedId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPedIdActionPerformed(evt);
            }
        });

        jLabel15.setText("dogId");

        txtDogId.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel12))
                                .addGap(3, 3, 3)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBornYearDog)
                                    .addComponent(selectHealthStatusDog, 0, 180, Short.MAX_VALUE)
                                    .addComponent(txtCodeDog)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btnCrearDog)
                                .addGap(65, 65, 65)
                                .addComponent(btnBuscarDog)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtColorDog, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                            .addComponent(txtNameDog)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtDogId, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(selectBreedDog, 0, 190, Short.MAX_VALUE)))))
                                .addContainerGap(51, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(btnEditarDog)
                                .addGap(66, 66, 66)
                                .addComponent(btnEliminarDog)
                                .addGap(35, 35, 35))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(checkBoxPedigree)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPedId, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCodeDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtNameDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtBornYearDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtColorDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(selectHealthStatusDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(selectBreedDog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxPedigree)
                    .addComponent(jLabel14)
                    .addComponent(txtPedId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtDogId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearDog)
                    .addComponent(btnBuscarDog)
                    .addComponent(btnEditarDog)
                    .addComponent(btnEliminarDog))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dogs Manager", jPanel3);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel1.setText("Pets Clinic");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPedIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPedIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPedIdActionPerformed

    private void checkBoxPedigreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPedigreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxPedigreeActionPerformed

    private void btnCrearDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearDogActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(this, "PRueba de crear perro");

        try {
            String code = txtCodeDog.getText();
            String name = txtNameDog.getText();
            int bornYear = Integer.parseInt(txtBornYearDog.getText());
            String color = txtColorDog.getText();
            String breed = selectBreedDog.getSelectedItem().toString();
            String healthStatus = selectHealthStatusDog.getSelectedItem().toString();
            boolean pedigree = checkBoxPedigree.isSelected();
            if (code.equals("") || name.equals("") || color.equals("")) {
                JOptionPane.showMessageDialog(this, "LLene todos los campos");
            } else {
                Dog perro = new Dog(0, breed, pedigree, 0, code, name, bornYear, color, healthStatus);
                ObjectList.add(perro);
                controllerPet.CreatePet(perro);
                this.fillJListDog();
                this.clearDogFields();
                JOptionPane.showMessageDialog(this, "Datos Guardados");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Por Favor ingrese un año de nacimiento valido");
        }
    }//GEN-LAST:event_btnCrearDogActionPerformed

    private void btnBuscarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDogActionPerformed
        // TODO add your handling code here:

        String code = txtCodeDog.getText();

        Dog dog = (Dog) controllerPet.SearchPet(code, "Perro");

        if (dog == null) {
            JOptionPane.showMessageDialog(this, "Codigo no encontrado");
        } else {
            txtPedId.setText(dog.getPetId() + "");
            txtDogId.setText(dog.getDogId() + "");
            txtNameDog.setText(dog.getName());
            txtColorDog.setText(dog.getColor());
            txtBornYearDog.setText(dog.getBorn_year() + "");
            selectHealthStatusDog.setSelectedItem(dog.getHealthStatus());
            selectBreedDog.setSelectedItem(dog.getBreed());
            checkBoxPedigree.setSelected(dog.isPedigree());
        }
    }//GEN-LAST:event_btnBuscarDogActionPerformed

    private void btnEditarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarDogActionPerformed
        // TODO add your handling code here:

        String code = txtCodeDog.getText();
        String name = txtNameDog.getText();
        String color = txtColorDog.getText();
        int bornYear = Integer.parseInt(txtBornYearDog.getText());
        String breed = selectBreedDog.getSelectedItem().toString();
        String healthStatus = selectHealthStatusDog.getSelectedItem().toString();
        boolean pedigree = checkBoxPedigree.isSelected();
        try {
            int petId = Integer.parseInt(txtPedId.getText());
            int dogId = Integer.parseInt(txtDogId.getText());

            Dog perro = new Dog(dogId, breed, pedigree, petId, code, name, bornYear, color, healthStatus);
            boolean response = controllerPet.EditPet(perro);
            if (response) {
                JOptionPane.showMessageDialog(this, "Registro Actualizado");
            } else {
                JOptionPane.showMessageDialog(this, "Error al Actualizar el registro");
            }
            this.fillJListDog();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Tiene que Buscar el registro a actualizar");
        }

    }//GEN-LAST:event_btnEditarDogActionPerformed

    private void btnEliminarDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDogActionPerformed
        // TODO add your handling code here:
        String code = txtCodeDog.getText();
        System.out.println(code);
        controllerPet.DeletePet(code, "Perro");

        JOptionPane.showMessageDialog(this, "Perro removed sucessfuly");
        this.clearCatFields();
        this.fillJListCat();


    }//GEN-LAST:event_btnEliminarDogActionPerformed

    private void btnEliminarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCatActionPerformed
        // TODO add your handling code here:
        String code = txtCodeCat.getText();

        //  boolean found = false;
        controllerPet.DeletePet(code, "Gato");

        JOptionPane.showMessageDialog(this, "Gato removed sucessfuly");
        this.clearCatFields();
        this.fillJListCat();
//        for (Cat gato : catObjectList) {
//            if (gato.getCode().equals(code)) {
//                this.catObjectList.remove(gato);
//                clearCatFields();
//                this.fillJListCat();
//                found = true;
//                break;
//            }
//        }
//        if (!found) {
//            JOptionPane.showMessageDialog(this, "Codigo no encontrado");
//
//        }
    }//GEN-LAST:event_btnEliminarCatActionPerformed

    private void btnEditarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCatActionPerformed
        // TODO add your handling code here:
        String code = txtCodeCat.getText();
        String name = txtNameCat.getText();
        String color = txtColorCat.getText();
        int bornYear = Integer.parseInt(txtBornYearCat.getText());
        String breed = selectBreedCat.getSelectedItem().toString();
        String healthStatus = selectHealthStatusCat.getSelectedItem().toString();
        try {
            int petId = Integer.parseInt(txtPetId.getText());
            int catId = Integer.parseInt(txtCatId.getText());

            Cat gato = new Cat(catId, breed, petId, code, name, bornYear, color, healthStatus);
            boolean response = controllerPet.EditPet(gato);
            if (response) {
                JOptionPane.showMessageDialog(this, "Registro Actualizado");
            } else {
                JOptionPane.showMessageDialog(this, "Error al Actualizar el registro");
            }
            this.fillJListCat();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Tiene que Buscar el registro a actualizar");
        }
    }//GEN-LAST:event_btnEditarCatActionPerformed

    private void btnBuscarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCatActionPerformed
        // TODO add your handling code here:
        String code = txtCodeCat.getText();

        Cat cat = (Cat) controllerPet.SearchPet(code, "Gato");

        if (cat == null) {
            JOptionPane.showMessageDialog(this, "Codigo no encontrado");
        } else {
            txtPetId.setText(cat.getPetId() + "");
            txtCatId.setText(cat.getCatId() + "");
            txtNameCat.setText(cat.getName());
            txtColorCat.setText(cat.getColor());
            txtBornYearCat.setText(cat.getBorn_year() + "");
            selectBreedCat.setSelectedItem(cat.getBreed());
            selectHealthStatusCat.setSelectedItem(cat.getHealthStatus());
        }
    }//GEN-LAST:event_btnBuscarCatActionPerformed

    private void btnCrearCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCatActionPerformed
        // TODO add your handling code here:
        try {
            String code = txtCodeCat.getText();
            String name = txtNameCat.getText();
            String color = txtColorCat.getText();
            int bornYear = Integer.parseInt(txtBornYearCat.getText());
            String breed = selectBreedCat.getSelectedItem().toString();
            String healthStatus = selectHealthStatusCat.getSelectedItem().toString();

            if (code.equals("") || name.equals("") || color.equals("")) {
                JOptionPane.showMessageDialog(this, "Por Favor llene todoso los campos");
            } else {
                Cat gato = new Cat(0, breed, 0, code, name, bornYear, color, healthStatus);
                controllerPet.CreatePet(gato);
                ObjectList.add(gato);
                this.fillJListCat();
                this.clearCatFields();
                JOptionPane.showMessageDialog(this, "Guardado Satisfatoriamente");
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnCrearCatActionPerformed

    private void selectBreedCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBreedCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectBreedCatActionPerformed

    private void txtPetIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPetIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPetIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCat;
    private javax.swing.JButton btnBuscarDog;
    private javax.swing.JButton btnCrearCat;
    private javax.swing.JButton btnCrearDog;
    private javax.swing.JButton btnEditarCat;
    private javax.swing.JButton btnEditarDog;
    private javax.swing.JButton btnEliminarCat;
    private javax.swing.JButton btnEliminarDog;
    private javax.swing.JCheckBox checkBoxPedigree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> petList;
    private javax.swing.JComboBox<String> selectBreedCat;
    private javax.swing.JComboBox<String> selectBreedDog;
    private javax.swing.JComboBox<String> selectHealthStatusCat;
    private javax.swing.JComboBox<String> selectHealthStatusDog;
    private javax.swing.JTextField txtBornYearCat;
    private javax.swing.JTextField txtBornYearDog;
    private javax.swing.JTextField txtCatId;
    private javax.swing.JTextField txtCodeCat;
    private javax.swing.JTextField txtCodeDog;
    private javax.swing.JTextField txtColorCat;
    private javax.swing.JTextField txtColorDog;
    private javax.swing.JTextField txtDogId;
    private javax.swing.JTextField txtNameCat;
    private javax.swing.JTextField txtNameDog;
    private javax.swing.JTextField txtPedId;
    private javax.swing.JTextField txtPetId;
    // End of variables declaration//GEN-END:variables
}
